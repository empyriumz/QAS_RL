[general]
episodes = 10

[env]
num_qubits = 4
num_layers = 2
num_classes = 3
fn_type = incremental_with_fixed_ends
accept_err = 5e-3
shift_threshold_time = 2000
shift_threshold_ball = 1e-3
success_thresh = 50
succ_radius_shift = 10
succes_switch = 5e-3
thresholds = []
switch_episodes = []
curriculum_type = MovingThreshold

[classifier]
batch_size = 32
num_epochs = 2
learning_rate = 0.03
num_samples_train = 128
num_samples_val = 64
min_accuracy = 0.7

[agent]
batch_size = 1000
memory_size = 20000
neurons = [1000, 1000, 1000, 1000, 1000]
dropout = 0.
learning_rate = 0.0001
acc_state = 1
agent_type = DeepQNstep
agent_class = DQN_Nstep
n_step = 6
init_net = 0

update_target_net = 500
final_gamma = 0.005
epsilon_decay = 0.99995
epsilon_min = 0.05
epsilon_restart = 1.0

[non_local_opt]
global_iters = 200
method = scipy_each_step
optim_alg = COBYLA
local_size = 8